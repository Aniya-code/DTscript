视频块可能的数量1-6
音频块可能的数量0-4
body内视频块数大于等于音频块数
时间约束 函数（返回布尔值，输入视频块的开始索引、结束索引、音频块的开始索引、结束索引）
差距小于阈值算匹配上，否则算unknown（先不考虑）  阈值0~4000

尝试组合时第一个满足就行
对第一次进行预处理，筛选范围。匹配在指纹库上应该有个弹性。前1~18个视频，前0~12个音频，一起组合，任选连续块的同时，满足时间约束。

取第一个匹配上的情况（可尝试其他选择匹配情况的策略，看看匹配上的情况有多种的可能性多不多）

pcap开头可能丢1~2个
中间丢一个小的后对齐（出现位置靠chunk_list的中后部分、不考虑）




连续的最多。。


下一步 启发式：预处理？机器学习？

========
PROMPT：

我有一个指纹库csv文件，每一行由ID,url,video_fp,video_timeline,audio_fp,audio_timeline组成，第一行为header，其中video_fp是一个/分割的列表，表示视频块序列，同理audio_fp表示音频块序列。在程序运行过程中，会有人点播一个url对应的视频，随着视频的播放会产生chunk流，chunk流也是一个整数序列。chunk列表中的每一个chunk都有可能是由若干个video_fp和audio_fp组合而成，组合就是数值相加，组合时要满足下列的约束：
1.视频块可能的数量为：1~6
2.音频块可能的数量为：0~4
3.组合时选取的视频块数量应大于等于音频块的数量
4.视频块或音频块的选取都应当连续
4.调用check_time_constraint的返回值为true。check_time_constraint的入参是组合时选取的视频块的开始、结束索引和音频块的开始、结束索引。返回布尔值表示是否满足我定义的时间约束。
5.组合后得到的总和与实际chunk大小的差值应当小于阈值：4000
6.对于第一个chunk需要特殊处理，应考虑前1~18个视频块和前0~12个音频块。
7.非第一个chunk在组合时，应当继续从上一个chunk选取的最后一个视频块或最后一个音频块处的下一块开始考虑，即应当连续。

综合上述背景，我需要一个高效的、易于扩展和维护的在线视频匹配算法。该算法基于实时在线产生的chunk序列去和指纹库csv文件中的每一行进行匹配，最终返回最有可能的那一行的url，实现在线的视频识别。chunk序列每新增一个chunk时都会调用一次你的匹配算法，你返回更新的匹配结果。在点播刚开始不久时，chunk可能较少，你有可能会匹配到指纹库里的多行，这种情况下你需要自定义一个决策函数返回一个最有可能的。